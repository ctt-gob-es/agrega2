<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
    This is used to map merge patterns in files generated
    by Bpm4Struts to new patterns. Just add content to the
    CDATA sections of the <to/> elements in order to
    use the following merge points.
-->
<mappings name="Bpm4StrutsMerge">
    <mapping>
        <from><![CDATA[<!-- context-param merge-point -->]]></from>
        <to>
            <path>../../../web/src/properties/context-param.xml</path>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- filter merge-point -->]]></from>
        <to>
            <![CDATA[
            <filter>
			        <filter-name>OpenIDAuthenticationProcessingFilter</filter-name>
			        <filter-class>es.pode.soporte.seguridad.openId.ui.openid.OpenIDAuthenticationProcessingFilter</filter-class>
			    </filter>
			    <filter>
			        <filter-name>AutenticadoFilter</filter-name>
			        <filter-class>es.pode.soporte.seguridad.ldap.AutenticadoFilter</filter-class>
			    </filter>
		<filter>
		    <filter-name>LanguageFilter</filter-name>
		    <filter-class>es.agrega.soporte.filter.LanguageFilter</filter-class>
		</filter>
                <filter>
                    <filter-name>HelpFilter</filter-name>
                    <filter-class>es.agrega.soporte.filter.HelpFilter</filter-class>
                    <init-param>
    					<param-name>HELP_URL</param-name>
						<param-value>/wiki/index.php</param-value>
					</init-param>
                </filter>
				<filter>
					<filter-name>XSS</filter-name>
					<filter-class>es.pode.soporte.seguridad.XSS.CrossScriptingFilter</filter-class>
				</filter>
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- filter-mapping merge-point -->]]></from>
        <to>
            <![CDATA[
            <filter-mapping>
  					<filter-name>OpenIDAuthenticationProcessingFilter</filter-name>
        			<url-pattern>/j_spring_openid_security_check</url-pattern>
   				</filter-mapping>
			    <filter-mapping>
			        <filter-name>AutenticadoFilter</filter-name>
			        <url-pattern>/*</url-pattern>
                </filter-mapping>
                <filter-mapping>
                    <filter-name>LanguageFilter</filter-name>
                    <url-pattern>/*</url-pattern>
                </filter-mapping>
                <filter-mapping>
                    <filter-name>HelpFilter</filter-name>
                    <url-pattern>/*</url-pattern>
                </filter-mapping>
				<filter-mapping>
					<filter-name>XSS</filter-name>
					<url-pattern>/*</url-pattern>
				</filter-mapping>
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- listener merge-point -->]]></from>
        <to>
            <![CDATA[
    <listener>
        <listener-class>org.apache.axis.transport.http.AxisHTTPSessionListener</listener-class>
    </listener>
            ]]>
        </to>      
    </mapping>
    <mapping>
        <from><![CDATA[<!-- error-page merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- servlet merge-point -->]]></from>
        <to>
            <![CDATA[
    <servlet>
        <display-name>JCaptcha Servlet</display-name>
    	<servlet-name>jcaptcha</servlet-name>
    	<servlet-class>es.pode.soporte.seguridad.captcha.ImageCaptchaServlet</servlet-class>
    </servlet>
    <servlet>
        <display-name>Apache-Axis Servlet</display-name>
        <servlet-name>AxisServlet</servlet-name>
        <servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
    </servlet>
    <!-- Servlets del RTE de ADL -->
 	<!-- Servlet definitions for the servlets that make up
         your web application, including initialization
         parameters.  With Tomcat, you can also send requests
         to servlets not listed here with a request like this:

           http://localhost:8080/{context-path}/servlet/{classname}

         but this usage is not guaranteed to be portable.  It also
         makes relative references to images and other resources
         required by your servlet more complicated, so defining
         all of your servlets (and defining a mapping to them with
         a <servlet-mapping> element) is recommended.

         Servlet initialization parameters can be retrieved in a
         servlet or JSP page by calling:

             String value =
               getServletConfig().getInitParameter("name");

         where "name" matches the <param-name> element of
         one of these initialization parameters.

         You can define any number of servlets, including zero.
    -->

    <servlet>
      <servlet-name>LMSCMIServlet</servlet-name>
      <!--
	      <description>
	        This servlet
	      </description>
      -->
      <servlet-class>es.pode.adl.server.LMSCMIServlet</servlet-class>
        <!-- Load this servlet at server startup time -->
      <load-on-startup>5</load-on-startup>
    </servlet>

    
    <!--<servlet>
      <servlet-name>SSPServer</servlet-name>
      <servlet-class>es.pode.adl.ims.server.SSP_Servlet</servlet-class>
      <load-on-startup>5</load-on-startup>
    </servlet>-->
 
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- servlet-mapping merge-point -->]]></from>
        <to>
            <![CDATA[
			
    <servlet-mapping>
    	<servlet-name>jcaptcha</servlet-name>
    	<url-pattern>*.jcaptcha</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/servlet/AxisServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>*.jws</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    
    <!-- Servlet mappings para el RTE de ADL -->
	<!-- Define mappings that are used by the servlet container to
         translate a particular request URI (context-relative) to a
         particular servlet.  The examples below correspond to the
         servlet descriptions above.  Thus, a request URI like:

           http://localhost:8080/{contextpath}/graph

         will be mapped to the "graph" servlet, while a request like:

           http://localhost:8080/{contextpath}/saveCustomer.do

         will be mapped to the "controller" servlet.

         You may define any number of servlet mappings, including zero.
         It is also legal to define more than one mapping for the same
         servlet, if you wish to.
    -->

    <servlet-mapping>
      <servlet-name>LMSCMIServlet</servlet-name>
      <url-pattern>/LMSCMIServlet</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>LMSCMIServlet</servlet-name>
      <url-pattern>/lmscmi</url-pattern>
    </servlet-mapping>

    <!--<servlet-mapping>
      <servlet-name>SSPServer</servlet-name>
      <url-pattern>/SSPServer</url-pattern>
    </servlet-mapping>-->
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- welcome-file-list merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- security-constraint merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- security-role merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- global-forwards merge-point -->]]></from>
        <to>
            <![CDATA[
            ]]>
        </to>
    </mapping>
    <mapping>
        <from><![CDATA[<!-- mime-type merge-point -->]]></from>
        <to>
            <![CDATA[
    <mime-mapping>
        <extension>wsdl</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xsd</extension>
        <mime-type>text/xml</mime-type>
    </mime-mapping>
            ]]>
        </to>
    </mapping>
    <!--
            For the next mapping you might want to do something like this
            (assuming you have a properties file called custom-resources.properties
            in /web/src/properties):

            <mapping>
                <from><![CDATA[# custom-messages merge-point]]></from>
                <to>
                    <path>../../../web/src/properties/custom-resources.properties</path>
                </to>
            </mapping>

            This will merge the entire file into the merge point.
    -->
      <mapping>
        <from><![CDATA[# custom-messages merge-point]]></from>
        <to>
            <path>../../../web/src/properties/custom-application-visualizar.properties</path>

        </to>
    </mapping>
    
</mappings>
