maven.multiproject.type=pom

maven.andromda.model.uri=file:${maven.src.dir}/uml/EntregarModel.xmi

# Configures AndroMDA
maven.andromda.configuration.uri=file:${maven.conf.dir}/andromda.xml

# Tells the AndroMDA maven plugin to not use Ant when running (speeds initialization)
maven.andromda.run.without.ant=true

# Define the output locations for the cartridge dependencies in the project.xml
maven.andromda.core.generated.dir=${maven.src.dir}/../../core/target/src
maven.andromda.core.manual.dir=${maven.src.dir}/../../core/src/java
maven.andromda.core.test.dir=${maven.src.dir}/../../core/src/test
maven.andromda.core.test.resources.dir=${maven.src.dir}/../../core/src/test-resources
maven.andromda.core.resources.dir=${maven.src.dir}/../../core/src/resources
maven.andromda.web.generated.dir=${maven.src.dir}/../../web/target/src
maven.andromda.web.manual.java.dir=${maven.src.dir}/../../web/src/java


maven.andromda.webservice.generated.dir=${maven.andromda.web.generated.dir}
maven.andromda.webservice.generated.wsdl.dir=${maven.andromda.webservice.generated.dir}/WEB-INF/classes/

maven.andromda.common.generated.dir=${maven.src.dir}/../../common/target/src

# The default strategy to use when using inhertiance
hibernate.inheritance.strategy=subclass
hibernate.db.showSql=false
# The hibernate generator class to use for identifiers
hibernate.generatorClass=native
# The default provider for web services, note that this can
# be overridden on model element level
default.provider=RPC

# The address of the port type in the generated WSDL
wsdl.soap.address=http://${service.host}:${service.port}/${application.id}-${application.version}/services

rules=false

# ------------- Acegi Security properties -------------

# Should Acegi be used to protect the application?
# Possible choices: {true, false}
ibuilder.security.useAcegiSecurity=true

# The way the user will be asked to present his credentials (username and password)
# Possible choices: {basic,digest,form,none}
ibuilder.security.userPwdAuthType=form

# If this property is "true" then the authentication is based on the X509 certificate of the user.
# Possible choices: {true, false}
ibuilder.security.x509Auth=false

# Regular expression which will by used to extract the user name from the certificate's Subject DN.
# Possible choices: {regular expression}
ibuilder.security.x509SubjectDNRegex=CN=(.*?),

# Will the login screen ever show a Captcha?
# Possible choices: {true,false}
ibuilder.security.loginCaptcha=false

# Maximum number of unsuccessful login attempts before showing a Captcha.
# Possible choices: {positive integers}
ibuilder.security.loginCaptchaThreshold=3

# Type of the repository used to store users and roles.
# Possible choices: {file,ldap,db}
ibuilder.security.backendType=ldap

# Should the application use CAS SSO as authentication system?
ibuilder.security.useCAS=true

# URLs for CAS SSO
#ibuilder.security.cas.CASServerURL=https://desarrollo:8443/cas
#ibuilder.security.cas.ApplicationURL=http://localhost:8080/entregar-1

# Way the passwords are stored in the backend {plain,md5,sha}
ibuilder.security.storedPasswords=plain

# Role to be applied to any resource with no one explicitly specified in the model.
ibuilder.security.defaultMinimumRole=ROLE_ANONYMOUS

# Should the user own all the roles or just one of them to access the resource?
# Possible choices: {all, any}
ibuilder.security.accessDecisionPolicy=any

# Default transport security level for the application. It can be overwritten at use-case level.
# Possible choices: {true, false}
ibuilder.security.requiresSecureChannel=false

# Ports used to serve secure (https) and insecure (http) requests (configured at application server level).
ibuilder.security.securePort=8443
ibuilder.security.insecurePort=8080
merge.location=${maven.src.dir}/merge
# ------------End Acegi Security properties -----------	
merge.location=${maven.src.dir}/merge
ibuilder.beans.useBeanMappings=true

# Start JMX properties

# Use JMX management?
# Possible choices: {true, false}
ibuilder.jmx.useJMX=false

# Host and port where a RMI registry will be started to register the server-side JSR-160 connector.
ibuilder.jmx.rmiRegistryHost=localhost
ibuilder.jmx.rmiRegistryPort=33333

# Dozer and hibernate statistics
# Possible choices {true, false}
ibuilder.jmx.dozerStatisticsEnabled=false
ibuilder.jmx.hibernateStatisticsEnabled=false

# Services and operations that are going to be monitored/managed.
# Possible choices {all, stereotyped}
ibuilder.jmx.monitoredServices=stereotyped
ibuilder.jmx.monitoredOperations=stereotyped

# End JMX properties

#Puerto de androMDA (configurable para poder compilar mientras hay un JBOSS en funcionamiento en la misma máquina
andromda.port=44460